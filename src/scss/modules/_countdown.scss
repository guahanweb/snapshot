$one-second: 1s;
$easing: cubic-bezier(1,0,1,0);

@mixin animate($count) {
    $step: (100 / $count);
    $progress: 0%;
    $translate: 0;
    @while $progress < 100 {
        #{$progress} { transform: translateY($translate); }
        $progress: $progress + $step;
        $translate: $translate - $digit-height;
    }
}

$digit-height: 180px;

.digit {
    display: inline-block;
    font-size: 200px;
    color: rgba(255,255,255,0.7);
    height: $digit-height;
    line-height: 1;
}

.timer-wrapper {
    display: block;
    position: absolute;
    height: 200px;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.time-part {
    margin: 80px auto;
    text-align: center;
    height: $digit-height;
    overflow: hidden;
    display: block;
    width: 180px;
    box-sizing: border-box;

    .digit-wrapper {
        animation-timing-function: $easing;
    }

    &.seconds {
        .digit-wrapper {
            &.hidden {
                display: none;
            }
        }
    }
}

@keyframes seconds {
    @include animate(5)
}
